# Use node image
FROM node:23

# Set working directory in the container
WORKDIR /app

# Define the build arguments (for build-time only)
ARG GEMINI_API_KEY
ARG CLIENT_URL
ARG GOOGLE_CLIENT_ID
ARG GOOGLE_CLIENT_SECRET
ARG MONGO_DB
ARG ACCESS_TOKEN_EXPIRE
ARG REFRESH_TOKEN_EXPIRE
ARG COOKIE_EXPIRE
ARG RESET_PASSWORD_EXPIRE
ARG EMAIL_USERNAME
ARG EMAIL_PASSWORD
ARG EMAIL_HOST
ARG EMAIL_PORT

# Set environment variables for the build stage
# These variables can be accessed during build-time
ENV GEMINI_API_KEY=$GEMINI_API_KEY
ENV CLIENT_URL=$CLIENT_URL
ENV GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
ENV MONGO_DB=$MONGO_DB
ENV ACCESS_TOKEN_EXPIRE=$ACCESS_TOKEN_EXPIRE
ENV REFRESH_TOKEN_EXPIRE=$REFRESH_TOKEN_EXPIRE
ENV COOKIE_EXPIRE=$COOKIE_EXPIRE
ENV RESET_PASSWORD_EXPIRE=$RESET_PASSWORD_EXPIRE
ENV EMAIL_USERNAME=$EMAIL_USERNAME
ENV EMAIL_PASSWORD=$EMAIL_PASSWORD
ENV EMAIL_HOST=$EMAIL_HOST
ENV EMAIL_PORT=$EMAIL_PORT

# Copy package.json and package-lock.json
COPY package*.json ./ 

# Install dependencies
RUN npm install --omit=dev

# Copy the rest of the application code
COPY . .

# Expose the application port
EXPOSE 8000

# Start the application
CMD ["node", "server.js"]
