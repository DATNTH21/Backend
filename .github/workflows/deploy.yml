name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg CLIENT_URL=${{ secrets.CLIENT_URL }} \
            --build-arg GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
            --build-arg GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            --build-arg GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
            --build-arg MONGO_DB=${{ secrets.MONGO_DB }} \
            --build-arg ACCESS_TOKEN_EXPIRE=${{ secrets.ACCESS_TOKEN_EXPIRE }} \
            --build-arg REFRESH_TOKEN_EXPIRE=${{ secrets.REFRESH_TOKEN_EXPIRE }} \
            --build-arg COOKIE_EXPIRE=${{ secrets.COOKIE_EXPIRE }} \
            --build-arg RESET_PASSWORD_EXPIRE=${{ secrets.RESET_PASSWORD_EXPIRE }} \
            --build-arg EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} \
            --build-arg EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} \
            --build-arg EMAIL_HOST=${{ secrets.EMAIL_HOST }} \
            --build-arg EMAIL_PORT=${{ secrets.EMAIL_PORT }} \
            -t ${{ secrets.DOCKER_USERNAME }}/testease_backend:latest .

      - name: Publish Image to docker hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/testease_backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Ssh to EC2 and pull latest Image
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/testease_backend:latest
            docker stop testease-backend-container || true
            docker rm testease-backend-container || true
            docker image prune -f
            docker run -d -p 8000:8000 \
            --name testease-backend-container \
            -e CLIENT_URL=${{ secrets.CLIENT_URL }} \
            -e GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
            -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
            -e MONGO_DB=${{ secrets.MONGO_DB }} \
            -e ACCESS_TOKEN_EXPIRE=${{ secrets.ACCESS_TOKEN_EXPIRE }} \
            -e REFRESH_TOKEN_EXPIRE=${{ secrets.REFRESH_TOKEN_EXPIRE }} \
            -e COOKIE_EXPIRE=${{ secrets.COOKIE_EXPIRE }} \
            -e RESET_PASSWORD_EXPIRE=${{ secrets.RESET_PASSWORD_EXPIRE }} \
            -e EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} \
            -e EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} \
            -e EMAIL_HOST=${{ secrets.EMAIL_HOST }} \
            -e EMAIL_PORT=${{ secrets.EMAIL_PORT }} \
            ${{ secrets.DOCKER_USERNAME }}/testease_backend:latest
